<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on</title><link>https://jneo8.com/tags/golang/</link><description>Recent content in golang on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jneo8.com/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>golang project architecture-202301071505</title><link>https://jneo8.com/publish/golang-project-architecture-202301071505/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jneo8.com/publish/golang-project-architecture-202301071505/</guid><description>golang project architecture-202301071505 Summary 結構化的 Golang project 設計
Notes 這是個老議題了, 但最近在網路上看到滿多教學文在講 project setup
還是來分享一下自己目前的理解跟設計
專案架構 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 .</description></item><item><title>mermaid - golang DI and CLI builder-202301071458</title><link>https://jneo8.com/publish/mermaid-golang-DI-and-CLI-builder-202301071458/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jneo8.com/publish/mermaid-golang-DI-and-CLI-builder-202301071458/</guid><description>mermaid - golang DI and CLI builder-202301071458 Summary Mermaid is a tool helping user to use dependency injection more easily. By using dig, cobra and viper together.</description></item></channel></rss>